<TrustFrameworkPolicy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" PolicySchemaVersion="0.3.0.0" TenantId="{Settings:Tenant}.onmicrosoft.com" PolicyId="B2C_1A_TrustFramework_Providers" PublicPolicyUri="http://{Settings:Tenant}.onmicrosoft.com/B2C_1A_TrustFramework_Providers">

    <BasePolicy>
        <TenantId>{Settings:Tenant}.onmicrosoft.com</TenantId>
        <PolicyId>B2C_1A_TrustFramework_Localization</PolicyId>
    </BasePolicy>


    <BuildingBlocks>
        <ClaimsSchema>
            <ClaimType Id="signInName">
                <DisplayName>Enter your Email address</DisplayName>
                <UserHelpText>Email address to use for signing in.</UserHelpText>
                <Restriction>
                    <Pattern RegularExpression="^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$" HelpText="The email you provided is not valid." />
                </Restriction>
            </ClaimType>
            <ClaimType Id="identityProviders">
                <DisplayName>IdentityProviders</DisplayName>
                <DataType>stringCollection</DataType>
                <UserHelpText>User identity providers</UserHelpText>
            </ClaimType>
            <ClaimType Id="domainParameter">
                <DisplayName>domainParameter</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>parsed domain value from url</UserHelpText>
            </ClaimType>
            <ClaimType Id="knownDomain">
                <DisplayName>knownDomain</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>if this a domain that is a customer</UserHelpText>
            </ClaimType>
            <ClaimType Id="isKnownCustomer">
                <DisplayName>knownDomain</DisplayName>
                <DataType>boolean</DataType>
                <UserHelpText>if this a domain that is a customer</UserHelpText>
            </ClaimType>
            <ClaimType Id="dummyTrue">
                <DisplayName>dummy value for comparison</DisplayName>
                <DataType>string</DataType>
                <UserHelpText/>
            </ClaimType>
            <ClaimType Id="providers">
                <DisplayName>configured identity providers</DisplayName>
                <DataType>stringCollection</DataType>
                <UserHelpText>an array of configured IdPs, names correspond to the domainParameter of the IdP</UserHelpText>
            </ClaimType>

            <ClaimType Id="product">
                <DisplayName>The product name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>The product name, either Widget or Transmogrifier</UserHelpText>
            </ClaimType>

            <!-- Start AzureMFA Claim Type -->

            <ClaimType Id="readOnlyPhone">
                <DisplayName>Phone Number</DisplayName>
                <DataType>string</DataType>
                <!-- <Mask Type="Simple">XXX-XXX-</Mask> -->
                <UserHelpText>Phone Number</UserHelpText>
                <UserInputType>Readonly</UserInputType>

            </ClaimType>
            <ClaimType Id="verificationCode">
                <DisplayName>Verification Code</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Enter your SMS verification code</UserHelpText>
                <UserInputType>TextBox</UserInputType>
                <Restriction>
                    <Pattern RegularExpression="^[0-9]{1,15}$" HelpText="Please enter digits" />
                </Restriction>
            </ClaimType>

            <!-- End AzureMFA Claim Type -->

            <!-- Start MFA Claim Types -->

            <ClaimType Id="extension_mfaByPhoneOrEmail">
                <DisplayName>Please select your preferred MFA method</DisplayName>
                <DataType>string</DataType>
                <UserInputType>RadioSingleSelect</UserInputType>
                <Restriction>
                    <Enumeration Text="Phone" Value="phone" SelectByDefault="true" />
                    <Enumeration Text="Email " Value="email" SelectByDefault="false" />
                </Restriction>
            </ClaimType>
            <ClaimType Id="readOnlyEmail">
                <DisplayName>Email Address</DisplayName>
                <DataType>string</DataType>
                <UserHelpText/>
                <UserInputType>Readonly</UserInputType>
            </ClaimType>


            <ClaimType Id="newPhoneNumberEntered">
                <DisplayName>New Phone Number Entered</DisplayName>
                <DataType>boolean</DataType>
            </ClaimType>

            <ClaimType Id="userIdForMFA">
                <DisplayName>UserId for MFA</DisplayName>
                <DataType>string</DataType>
            </ClaimType>

            <ClaimType Id="strongAuthenticationPhoneNumber">
                <DisplayName>Phone Number</DisplayName>
                <DataType>string</DataType>
                <Mask Type="Simple">XXX-XXX-</Mask>
                <UserHelpText>Your telephone number</UserHelpText>
            </ClaimType>


            <ClaimType Id="Verified.strongAuthenticationPhoneNumber">
                <DisplayName>Verified Phone Number</DisplayName>
                <DataType>string</DataType>
                <DefaultPartnerClaimTypes>
                    <Protocol Name="OpenIdConnect" PartnerClaimType="phone_number" />
                </DefaultPartnerClaimTypes>
                <Mask Type="Simple">XXX-XXX-</Mask>
                <UserHelpText>Your office phone number that has been verified</UserHelpText>
            </ClaimType>


            <!-- End MFA Claim Types -->


            <!-- Start MFA Timeout Claim Types -->

            <ClaimType Id="extension_LastMFATime">
                <DisplayName>last time user did MFA</DisplayName>
                <DataType>dateTime</DataType>
                <UserHelpText>last time user did MFA</UserHelpText>
            </ClaimType>
            <ClaimType Id="CurrentTime">
                <DisplayName>Current time</DisplayName>
                <DataType>dateTime</DataType>
                <UserHelpText>Current time</UserHelpText>
            </ClaimType>
            <ClaimType Id="isLastMFATimeGreaterThanWindow">
                <DisplayName>is the last time the user did MFA over the window</DisplayName>
                <DataType>boolean</DataType>
                <UserHelpText>is the last time the user did MFA over the window</UserHelpText>
            </ClaimType>

            <!-- End MFA Timeout Claim Types -->


        </ClaimsSchema>
        <ClaimsTransformations>
            <!-- Start AzureMFA Claim Transformations -->

            <ClaimsTransformation Id="CopyPhoneToReadOnly" TransformationMethod="CopyClaim">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="strongAuthenticationPhoneNumber" TransformationClaimType="inputClaim"/>
                </InputClaims>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="readOnlyPhone" TransformationClaimType="outputClaim"/>
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="CopyPhoneToReadOnly2" TransformationMethod="CopyClaim">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" TransformationClaimType="inputClaim"/>
                </InputClaims>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="readOnlyPhone" TransformationClaimType="outputClaim"/>
                </OutputClaims>
            </ClaimsTransformation>

            <!-- <ClaimsTransformation Id="CopyEmailToReadOnly" TransformationMethod="CopyClaim">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="inputClaim"/>
                </InputClaims>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="readOnlyEmail" TransformationClaimType="outputClaim"/>
                </OutputClaims>
            </ClaimsTransformation> -->

            <!-- End Azure MFA Claim Transformations -->

            <!--Demo: Gets the domain portion of the sign-in email address-->
            <ClaimsTransformation Id="ParseDomain" TransformationMethod="ParseDomain">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="signInName" TransformationClaimType="emailAddress" />
                </InputClaims>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="domainParameter" TransformationClaimType="domain" />
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="KnownDomainLookup" TransformationMethod="StringCollectionContainsClaim">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="providers" TransformationClaimType="collection" />
                    <InputClaim ClaimTypeReferenceId = "domainParameter" TransformationClaimType="item" />
                </InputClaims>
                <InputParameters>
                    <InputParameter Id = "ignoreCase" DataType="string" Value="true"/>
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="isKnownCustomer" TransformationClaimType="outputClaim" />
                </OutputClaims>
            </ClaimsTransformation>


            <ClaimsTransformation Id="DomainLookup" TransformationMethod="LookupValue">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId = "domainParameter" TransformationClaimType="inputParameterId" />
                </InputClaims>
                <InputParameters>
                    <InputParameter Id = "M365x112487.OnMicrosoft.com" DataType="string" Value="true" />
                    <InputParameter Id = "Microsoft.OnMicrosoft.com" DataType="string" Value="true" />
                    <InputParameter Id= "errorOnFailedLookup" DataType="boolean" Value="false" />
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId = "knownDomain" TransformationClaimType="outputClaim" />
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="CheckDomainParameterValue" TransformationMethod="CompareClaims">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="knownDomain" TransformationClaimType="inputClaim1" />
                    <InputClaim ClaimTypeReferenceId="dummyTrue" TransformationClaimType="inputClaim2" />
                </InputClaims>
                <InputParameters>
                    <InputParameter Id="operator" DataType="string" Value="EQUAL" />
                    <InputParameter Id="ignoreCase" DataType="string" Value="true" />
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="isKnownCustomer" TransformationClaimType="outputClaim" />
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="CreateidentityProvidersCollection" TransformationMethod="AddItemToStringCollection">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="domainParameter" TransformationClaimType="item" />
                    <InputClaim ClaimTypeReferenceId="identityProviders" TransformationClaimType="collection" />
                </InputClaims>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="identityProviders" TransformationClaimType="collection" />
                </OutputClaims>
            </ClaimsTransformation>

            <!-- Start MFA Claim Transformations -->

            <ClaimsTransformation Id="CopySignInNameToReadOnly" TransformationMethod="FormatStringClaim">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="signInName" TransformationClaimType="inputClaim" />
                </InputClaims>
                <InputParameters>
                    <InputParameter Id="stringFormat" DataType="string" Value="{0}" />
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="readOnlyEmail" TransformationClaimType="outputClaim" />
                </OutputClaims>
            </ClaimsTransformation>
            <ClaimsTransformation Id="CopyEmailToReadOnly" TransformationMethod="FormatStringClaim">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="inputClaim" />
                </InputClaims>
                <InputParameters>
                    <InputParameter Id="stringFormat" DataType="string" Value="{0}" />
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="readOnlyEmail" TransformationClaimType="outputClaim" />
                </OutputClaims>
            </ClaimsTransformation>

            <!-- End MFA Claim Transformations -->

            <!-- Start MFA Phone Factor Claim Transformations -->

            <ClaimsTransformation Id="CreateUserIdForMFA" TransformationMethod="FormatStringClaim">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="objectId" TransformationClaimType="inputClaim" />
                </InputClaims>
                <InputParameters>
                    <InputParameter Id="stringFormat" DataType="string" Value="{0}@{RelyingPartyTenantId}" />
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="userIdForMFA" TransformationClaimType="outputClaim" />
                </OutputClaims>
            </ClaimsTransformation>


            <!-- End MFA Phone Factor Claim Transformations -->

            <!-- Start MFA Timeout Claim Transformations -->

            <ClaimsTransformation Id="GetSystemDateTime" TransformationMethod="GetCurrentDateTime">
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="CurrentTime" TransformationClaimType="currentDateTime" />
                </OutputClaims>
            </ClaimsTransformation>
            <ClaimsTransformation Id="CompareTimetoLastMFATime" TransformationMethod="DateTimeComparison">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="extension_LastMFATime" TransformationClaimType="firstDateTime" />
                    <InputClaim ClaimTypeReferenceId="CurrentTime" TransformationClaimType="secondDateTime" />
                </InputClaims>
                <InputParameters>
                    <InputParameter Id="operator" DataType="string" Value="earlier than" />
                    <InputParameter Id="timeSpanInSeconds" DataType="int" Value="100" />
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="isLastMFATimeGreaterThanWindow" TransformationClaimType="result" />
                </OutputClaims>
            </ClaimsTransformation>


            <!-- End MFA Timeout Claim Transformations -->


        </ClaimsTransformations>

        <!-- Start AzureMFA DisplayControls -->
        <DisplayControls>
            <DisplayControl Id="verifyEmailOrPhoneControl" UserInterfaceControlType="VerificationControl">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="readOnlyPhone" />
                    <InputClaim ClaimTypeReferenceId="readOnlyEmail" />
                </InputClaims>
                <DisplayClaims>
                    <DisplayClaim ClaimTypeReferenceId="extension_mfaByPhoneOrEmail" Required="true" />
                    <DisplayClaim ClaimTypeReferenceId="readOnlyPhone" />
                    <DisplayClaim ClaimTypeReferenceId="readOnlyEmail" />
                    <DisplayClaim ClaimTypeReferenceId="verificationCode" ControlClaimType="VerificationCode" Required="true" />
                </DisplayClaims>
                <Actions>
                    <Action Id="SendCode">
                        <ValidationClaimsExchange>
                            <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AzureMfa-SendSmsSimple">
                                <Preconditions>
                                    <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                                        <Value>extension_mfaByPhoneOrEmail</Value>
                                        <Value>email</Value>
                                        <Action>SkipThisValidationTechnicalProfile</Action>
                                    </Precondition>
                                </Preconditions>
                            </ValidationClaimsExchangeTechnicalProfile>
                            <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-SendCode">
                                <Preconditions>
                                    <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                                        <Value>extension_mfaByPhoneOrEmail</Value>
                                        <Value>phone</Value>
                                        <Action>SkipThisValidationTechnicalProfile</Action>
                                    </Precondition>
                                </Preconditions>
                            </ValidationClaimsExchangeTechnicalProfile>
                        </ValidationClaimsExchange>
                    </Action>
                    <Action Id="VerifyCode">
                        <ValidationClaimsExchange>
                            <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AzureMfa-VerifySms">
                                <Preconditions>
                                    <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                                        <Value>extension_mfaByPhoneOrEmail</Value>
                                        <Value>email</Value>
                                        <Action>SkipThisValidationTechnicalProfile</Action>
                                    </Precondition>
                                </Preconditions>
                            </ValidationClaimsExchangeTechnicalProfile>
                            <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-VerifyCode">
                                <Preconditions>
                                    <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                                        <Value>extension_mfaByPhoneOrEmail</Value>
                                        <Value>phone</Value>
                                        <Action>SkipThisValidationTechnicalProfile</Action>
                                    </Precondition>
                                </Preconditions>
                            </ValidationClaimsExchangeTechnicalProfile>
                        </ValidationClaimsExchange>
                    </Action>
                </Actions>
            </DisplayControl>
        </DisplayControls>
        <!-- End AzureMFA DisplayControls -->

    </BuildingBlocks>





    <ClaimsProviders>

        <ClaimsProvider>
            <DisplayName>Set Is Password Reset</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="StartPasswordResetFlow">
                    <DisplayName>Set the password flow</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <OutputClaims>
                        <!--Sample: Setting the indicator whether user resetting the password-->
                        <OutputClaim ClaimTypeReferenceId="isPasswordResetFlow" DefaultValue="true" />
                    </OutputClaims>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>


        <ClaimsProvider>
            <DisplayName>Set Product Name</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="REST-SetProductName">
                    <DisplayName>Get Product Name (hardcoded at first)</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="product" DefaultValue="Transmogrifier" AlwaysUseDefaultValue="true" />
                    </OutputClaims>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>IdP REST API</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="REST-GetProviders">
                    <DisplayName>Get configured IdP providers from App Service endpoint</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ServiceUrl">{Settings:IdPRESTAPI}</Item>
                        <Item Key="SendClaimsIn">QueryString</Item>
                        <!-- Set AuthenticationType to Basic or ClientCertificate in production environments -->
                        <Item Key="AuthenticationType">None</Item>
                        <!-- REMOVE the following line in production environments -->
                        <Item Key="AllowInsecureAuthInProduction">true</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="product" DefaultValue="Widget" AlwaysUseDefaultValue="true" />
                    </InputClaims>
                    <OutputClaims>
                        <!-- Claims parsed from your REST API -->
                        <OutputClaim ClaimTypeReferenceId="providers" />
                    </OutputClaims>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>


        <ClaimsProvider>
            <DisplayName>Parse domain parameter</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="HRDLogic">
                    <DisplayName>ParseDomainHint</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="dummyTrue" DefaultValue="true"/>
                        <InputClaim ClaimTypeReferenceId="signInName"/>
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="identityProviders"/>
                        <!-- 
                        <OutputClaim ClaimTypeReferenceId="knownDomain" /> 
                        -->
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="ParseDomain" />
                        <!--
                        <OutputClaimsTransformation ReferenceId="DomainLookup" />
                        -->
                        <OutputClaimsTransformation ReferenceId="KnownDomainLookup" />
                        <!-- 
                        <OutputClaimsTransformation ReferenceId="CheckDomainParameterValue" />
                        -->
                        <OutputClaimsTransformation ReferenceId="CreateidentityProvidersCollection" />
                    </OutputClaimsTransformations>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <Domain>M365x112487</Domain>
            <DisplayName>Login with M365x112487 AAD OIDC</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="AAD-OIDC">
                    <DisplayName>Login with Contoso AAD (OIDC)</DisplayName>
                    <Description>Login with Contoso AAD (OIDC)</Description>
                    <Protocol Name="OpenIdConnect" />
                    <OutputTokenFormat>JWT</OutputTokenFormat>
                    <Metadata>
                        <Item Key="METADATA">https://login.microsoftonline.com/M365x112487.onmicrosoft.com/v2.0/.well-known/openid-configuration</Item>
                        <Item Key="client_id">{Settings:ContosoAADClientId}</Item>
                        <Item Key="UsePolicyInRedirectUri">false</Item>
                        <Item Key="response_types">code</Item>
                        <Item Key="scope">openid profile</Item>
                        <Item Key="response_mode">form_post</Item>
                        <Item Key="HttpBinding">POST</Item>
                        <Item Key="ClaimTypeOnWhichToEnable">identityProviders</Item>
                        <Item Key="ClaimValueOnWhichToEnable">M365x112487.OnMicrosoft.com</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <!-- u~4.Hoe5g4_iZP.N2AGQGD4d~_S1.8d0P1 -->
                        <Key Id="client_secret" StorageReferenceId="B2C_1A_OneDotComSecret" />
                    </CryptographicKeys>
                    <InputClaims>
                        <!--Demo: pass the login_hint to Azure AD home realm discovery page-->
                        <InputClaim ClaimTypeReferenceId="signInName" PartnerClaimType="login_hint" />
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="oid" />
                        <OutputClaim ClaimTypeReferenceId="tenantId" PartnerClaimType="tid" />
                        <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="given_name" />
                        <OutputClaim ClaimTypeReferenceId="surName" PartnerClaimType="family_name" />
                        <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
                        <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialIdpAuthentication" AlwaysUseDefaultValue="true" />
                        <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="AADOIDCIDP" AlwaysUseDefaultValue="true" />
                        <OutputClaim ClaimTypeReferenceId="email" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CreateRandomUPNUserName" />
                        <OutputClaimsTransformation ReferenceId="CreateUserPrincipalName" />
                        <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId" />
                        <OutputClaimsTransformation ReferenceId="CreateSubjectClaimFromAlternativeSecurityId" />
                    </OutputClaimsTransformations>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-SocialLogin" />
                    <EnabledForUserJourneys>OnItemExistenceInStringCollectionClaim</EnabledForUserJourneys>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>


        <ClaimsProvider>
            <Domain>Microsoft</Domain>
            <DisplayName>Login with Microsoft AAD OIDC</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="MSA-OIDC">
                    <DisplayName>Login with Microsoft AAD (OIDC)</DisplayName>
                    <Description>Login with Microsoft AAD (OIDC)</Description>
                    <Protocol Name="OpenIdConnect" />
                    <OutputTokenFormat>JWT</OutputTokenFormat>
                    <Metadata>
                        <Item Key="METADATA">https://login.microsoftonline.com/microsoft.onmicrosoft.com/v2.0/.well-known/openid-configuration</Item>
                        <Item Key="client_id">{Settings:MSFTAADClientId}</Item>
                        <Item Key="UsePolicyInRedirectUri">false</Item>
                        <Item Key="response_types">code</Item>
                        <Item Key="scope">openid profile</Item>
                        <Item Key="response_mode">form_post</Item>
                        <Item Key="HttpBinding">POST</Item>
                        <Item Key="ClaimTypeOnWhichToEnable">identityProviders</Item>
                        <Item Key="ClaimValueOnWhichToEnable">Microsoft.com</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <!-- I9L8O4fBo..3~.eldcUGHQSm_h-Fs10.1L -->
                        <Key Id="client_secret" StorageReferenceId="B2C_1A_TwoDotComSecret" />
                    </CryptographicKeys>
                    <InputClaims>
                        <!--Demo: pass the login_hint to Azure AD home realm discovery page-->
                        <InputClaim ClaimTypeReferenceId="signInName" PartnerClaimType="login_hint" />
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="oid" />
                        <OutputClaim ClaimTypeReferenceId="tenantId" PartnerClaimType="tid" />
                        <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="given_name" />
                        <OutputClaim ClaimTypeReferenceId="surName" PartnerClaimType="family_name" />
                        <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
                        <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialIdpAuthentication" AlwaysUseDefaultValue="true" />
                        <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="MSAOIDCIDP" AlwaysUseDefaultValue="true" />
                        <OutputClaim ClaimTypeReferenceId="email" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CreateRandomUPNUserName" />
                        <OutputClaimsTransformation ReferenceId="CreateUserPrincipalName" />
                        <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId" />
                        <OutputClaimsTransformation ReferenceId="CreateSubjectClaimFromAlternativeSecurityId" />
                    </OutputClaimsTransformations>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-SocialLogin" />
                    <EnabledForUserJourneys>OnItemExistenceInStringCollectionClaim</EnabledForUserJourneys>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>



        <!--Demo: This technical profile collects the sign-in email address and extracts the sign-in domain name -->
        <ClaimsProvider>
            <DisplayName>Local Account</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="SelfAsserted-Signin-Email">
                    <DisplayName>Local Account Signin</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">api.selfasserted.new</Item>
                        <Item Key="setting.showCancelButton">false</Item>
                    </Metadata>
                    <IncludeInSso>false</IncludeInSso>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="signInName" />
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="signInName" Required="true" />
                    </OutputClaims>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD" />
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <!-- Disable Sign Up-->
        <ClaimsProvider>
            <DisplayName>Local Account</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="SelfAsserted-LocalAccountSignin-Email">
                    <Metadata>
                        <Item Key="setting.showSignupLink">false</Item>
                        <Item Key="setting.enableRememberMe">True</Item>
                        <Item Key="ContentDefinitionReferenceId">api.selfasserted.new</Item>
                    </Metadata>
                    <!-- Start MFA Output Claim Transformations -->
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CopySignInNameToReadOnly" />
                    </OutputClaimsTransformations>
                    <!-- End MFA Output Claim Transformations -->
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <!-- Start MFA Claims Providers -->

        <ClaimsProvider>
            <DisplayName>Self Asserted</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="SelfAsserted-Select-MFA-Method">
                    <DisplayName>Allow user to choose their MFA Method</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
                    </Metadata>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="extension_mfaByPhoneOrEmail" Required="true"/>
                    </OutputClaims>
                </TechnicalProfile>

                <TechnicalProfile Id="EmailVerifyOnSignIn">
                    <DisplayName>EmailVerifyOnSignIn</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="readOnlyEmail" />
                    </InputClaims>
                    <OutputClaims>
                        <!-- Required claims -->
                        <OutputClaim ClaimTypeReferenceId="isActiveMFASession" DefaultValue="true"/>
                        <OutputClaim ClaimTypeReferenceId="readOnlyEmail" PartnerClaimType="Verified.Email"/>
                    </OutputClaims>
                    <ValidationTechnicalProfiles>
                        <ValidationTechnicalProfile ReferenceId="AAD-UserWriteMFAMethod">
                        </ValidationTechnicalProfile>
                    </ValidationTechnicalProfiles>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-MFA" />
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Local Account</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="LocalAccountSignUpWithLogonEmail">
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CopyEmailToReadOnly" />
                    </OutputClaimsTransformations>
                </TechnicalProfile>

                <!-- <TechnicalProfile Id="SelfAsserted-LocalAccountSignin-Email">
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CopySignInNameToReadOnly" />
                    </OutputClaimsTransformations>
                </TechnicalProfile> -->
            </TechnicalProfiles>
        </ClaimsProvider>



        <ClaimsProvider>
            <DisplayName>Azure Active Directory</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="AAD-Common">
                    <!-- Provide objectId and appId before using extension properties. -->
                    <Metadata>
                        <Item Key="ApplicationObjectId">{Settings:ExtensionsObjId}</Item>
                        <Item Key="ClientId">{Settings:ExtensionsAppId}</Item>
                    </Metadata>
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-UserWriteMFAMethod">
                    <Metadata>
                        <Item Key="Operation">Write</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="objectId" />
                    </InputClaims>
                    <PersistedClaims>
                        <!-- Required claims -->
                        <PersistedClaim ClaimTypeReferenceId="objectId" />
                        <PersistedClaim ClaimTypeReferenceId="userPrincipalName" />
                        <PersistedClaim ClaimTypeReferenceId="extension_mfaByPhoneOrEmail" />
                        <PersistedClaim ClaimTypeReferenceId="displayName" />
                    </PersistedClaims>
                    <IncludeTechnicalProfile ReferenceId="AAD-Common" />
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD" />
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-UserWritePhoneNumberUsingObjectId">
                    <Metadata>
                        <Item Key="Operation">Write</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
                    </Metadata>
                    <IncludeInSso>false</IncludeInSso>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
                    </InputClaims>
                    <PersistedClaims>
                        <PersistedClaim ClaimTypeReferenceId="objectId" />
                        <PersistedClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" PartnerClaimType="strongAuthenticationPhoneNumber" />
                        <!--Sample: Add the MFA preferred method to the persisted claims collection -->
                        <PersistedClaim ClaimTypeReferenceId="extension_mfaByPhoneOrEmail" />
                        <!-- Start MFA Timeout persisted claim for current time -->
                        <PersistedClaim ClaimTypeReferenceId="CurrentTime" PartnerClaimType="extension_LastMFATime" />
                        <!-- End MFA Timeout persisted claim for current time -->
                    </PersistedClaims>
                    <IncludeTechnicalProfile ReferenceId="AAD-Common" />
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-GetSystemTime">
                    <DisplayName>Retrieve current system time</DisplayName>
                    <Protocol Name="None" />
                    <!-- Start MFA timeout output claims transformation -->
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="GetSystemDateTime" />
                    </OutputClaimsTransformations>
                    <!-- End MFA timeout output claims transformation -->
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-UserReadUsingObjectId">
                    <OutputClaims>
                        <!--Sample: Read the MFA preferred method-->
                        <OutputClaim ClaimTypeReferenceId="extension_mfaByPhoneOrEmail"/>
                        <OutputClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" PartnerClaimType="strongAuthenticationPhoneNumber" />
                    </OutputClaims>
                </TechnicalProfile>


                <TechnicalProfile Id="API-GetSystemTime">
                    <DisplayName>Get current system time</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId = "CurrentTime" />
                    </OutputClaims>
                    <!-- Start MFA timeout output claims transformation -->
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="GetSystemDateTime" />
                    </OutputClaimsTransformations>
                    <!-- End MFA timeout output claims transformation -->
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-UserReadUsingAlternativeSecurityId">
                    <OutputClaims>
                        <!--Sample: Read the MFA preferred method-->
                        <OutputClaim ClaimTypeReferenceId="extension_mfaByPhoneOrEmail"/>
                        <OutputClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" PartnerClaimType="strongAuthenticationPhoneNumber" />
                    </OutputClaims>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <!-- Start AzureMFA Claims Providers -->
        <ClaimsProvider>
            <DisplayName>Azure MFA</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="VerifyEmailOrPhone">
                    <DisplayName>Verify Email Or Phone</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">api.selfasserted.2.0.0</Item>
                        <Item Key="language.button_continue">Continue</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
                    </CryptographicKeys>
                    <InputClaimsTransformations>
                        <InputClaimsTransformation ReferenceId="CopyPhoneToReadOnly2" />
                        <!-- <InputClaimsTransformation ReferenceId="CopyEmailToReadOnly" /> -->
                    </InputClaimsTransformations>
                    <DisplayClaims>
                        <DisplayClaim DisplayControlReferenceId="verifyEmailOrPhoneControl" />
                    </DisplayClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId" />
                        <OutputClaim ClaimTypeReferenceId="strongAuthenticationPhoneNumber" />
                    </OutputClaims>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-MFA" />
                </TechnicalProfile>
                <TechnicalProfile Id="AzureMfa-VerifySms">
                    <DisplayName>Verify Sms</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureMfaProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="Operation">Verify</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="readOnlyPhone" PartnerClaimType="phoneNumber" />
                        <InputClaim ClaimTypeReferenceId="verificationCode" />
                    </InputClaims>
                </TechnicalProfile>
                <TechnicalProfile Id="AzureMfa-SendSmsSimple">
                    <DisplayName>Send Sms</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureMfaProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="Operation">OneWaySMS</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="signInName" PartnerClaimType="userPrincipalName" />
                        <InputClaim ClaimTypeReferenceId="readOnlyPhone" PartnerClaimType="phoneNumber" />
                    </InputClaims>
                </TechnicalProfile>
                <TechnicalProfile Id="AadSspr-SendCode">
                    <DisplayName>Send Code</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AadSsprProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="Operation">SendCode</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="readOnlyEmail" PartnerClaimType="emailAddress"/>
                    </InputClaims>
                </TechnicalProfile>
                <TechnicalProfile Id="AadSspr-VerifyCode">
                    <DisplayName>Verify Code</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AadSsprProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="Operation">VerifyCode</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="verificationCode" />
                        <InputClaim ClaimTypeReferenceId="readOnlyEmail" PartnerClaimType="emailAddress"/>
                    </InputClaims>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>
        <!-- End AzureMFA Claims Provider -->

        <!-- Start PhoneFactor Claims Providers for MFA -->

        <ClaimsProvider>
            <DisplayName>PhoneFactor</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="PhoneFactor-InputOrVerify">
                    <DisplayName>PhoneFactor</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.PhoneFactorProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">api.phonefactor</Item>
                        <Item Key="ManualPhoneNumberEntryAllowed">true</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
                    </CryptographicKeys>
                    <InputClaimsTransformations>
                        <InputClaimsTransformation ReferenceId="CreateUserIdForMFA" />
                    </InputClaimsTransformations>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="userIdForMFA" PartnerClaimType="UserId" />
                        <InputClaim ClaimTypeReferenceId="strongAuthenticationPhoneNumber" />
                        <InputClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" PartnerClaimType="Verified.OfficePhone" />
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" PartnerClaimType="Verified.OfficePhone" />
                        <OutputClaim ClaimTypeReferenceId="newPhoneNumberEntered" PartnerClaimType="newPhoneNumberEntered" />
                        <!-- Start add output claim for active MFA session -->
                        <OutputClaim ClaimTypeReferenceId="isActiveMFASession" DefaultValue="true"/>
                        <!-- End add output claim for active MFA session -->
                    </OutputClaims>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-MFA" />
                </TechnicalProfile>

                <!-- Start MFA Timeout Technical Profiles for PhoneFactor -->

                <!-- Reads the the last time which they performed MFA -->
                <TechnicalProfile Id="AAD-UserReadStoredLastMFATime">
                    <Metadata>
                        <Item Key="Operation">Read</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
                    </Metadata>
                    <IncludeInSso>false</IncludeInSso>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
                    </InputClaims>
                    <OutputClaims>
                        <!-- <OutputClaim ClaimTypeReferenceId="CurrentTime" /> -->
                        <OutputClaim ClaimTypeReferenceId="extension_LastMFATime" DefaultValue="2018-10-01T15:00:00.0000000Z" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CompareTimetoLastMFATime" />
                    </OutputClaimsTransformations>
                    <IncludeTechnicalProfile ReferenceId="AAD-Common" />
                </TechnicalProfile>
                <!-- End MFA Timeout Technical Profiles for PhoneFactor -->


                <!-- End MFA Timeout Technical Profiles for PhoneFactor -->


            </TechnicalProfiles>
        </ClaimsProvider>

        <!-- End PhoneFactor Claims Providers for MFA -->


        <!-- Start MFA Session Management Claims Providers -->

        <ClaimsProvider>
            <DisplayName>Session Management</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="SM-MFA">
                    <DisplayName>Session Mananagement Provider</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.SSO.DefaultSSOSessionProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <PersistedClaims>
                        <PersistedClaim ClaimTypeReferenceId="strongAuthenticationPhoneNumber" />
                    </PersistedClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="isActiveMFASession" DefaultValue="true"/>
                    </OutputClaims>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <!-- End MFA Session Management Claims Providers -->


        <!-- End MFA Claims Providers -->

    </ClaimsProviders>
</TrustFrameworkPolicy>